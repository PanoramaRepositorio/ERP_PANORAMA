<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnEnviar.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>